<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sys_update_set</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sys_update_set">state=complete^EQ<item display_value="Complete" endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="complete"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>MPLC Update Set - OnComplete Update</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Update the (Aggergated) Hash
	const updateXmlGa = new GlideAggregate('sys_update_xml');
	updateXmlGa.addQuery('update_set', 'e765afab93a70210e02873718bba105d');
	updateXmlGa.addAggregate('SUM', 'payload_hash');
	updateXmlGa.query();
	if (updateXmlGa.next()) {
		current.x_376096_mplc_hash = updateXmlGa.getAggregate('SUM', 'payload_hash')
	}

	// update the apps version entries where the hash no longer matches
	const appVerGr = new GlideRecord('x_376096_mplc_app_version');
	appVerGr.addQuery('update_set', current.sys_id);
	appVerGr.addQuery('hash', '!=', current.x_376096_mplc_hash);
	appVerGr.setValue('update_set', '');
	appVerGr.updateMultiple();
	if (current.x_376096_mplc_hash) {
		// update the app versions where the hash matches
		const appVerGr = new GlideRecord('x_376096_mplc_app_version');
		appVerGr.addQuery('hash', current.x_376096_mplc_hash);
		appVerGr.updateMultiple('update_set', current.sys_id);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>markus.kraus</sys_created_by>
        <sys_created_on>2024-08-24 07:27:05</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>c4b958dc931492d0e02873718bba10f7</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>MPLC Update Set - OnComplete Update</sys_name>
        <sys_overrides/>
        <sys_package display_value="Marketplace Client" source="x_376096_mplc">2fe28b4497bf39103c2d3f56f053af4e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Marketplace Client">2fe28b4497bf39103c2d3f56f053af4e</sys_scope>
        <sys_update_name>sys_script_c4b958dc931492d0e02873718bba10f7</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2024-08-26 14:40:11</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=c4b958dc931492d0e02873718bba10f7"/>
</record_update>
