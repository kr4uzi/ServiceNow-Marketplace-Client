<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_376096_mplc_app_version</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_376096_mplc_app_version">target_table=sys_update_set^targetVALCHANGES^EQ<item endquery="false" field="target_table" goto="false" newquery="false" operator="=" or="false" value="sys_update_set"/>
            <item endquery="false" field="target" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>MPLC App Version - Update Set Changes</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	const appGr = current.app.getRefRecord();
	if (current.target) {
		const appVerGr = getLatestAppVersion(appGr.sys_id);
		if (appVerGr.isValidRecord()) {
			if (appVerGr.sys_id == current.sys_id) {
				appGr.installed_version = current.sys_id;
				appGr.update();
			}
		}
	} else {
		if (appGr.getValue('installed_version') == current.sys_id) {
			const appVerGr = getLatestAppVersion(appGr.sys_id);
			if (appVerGr.isValidRecord()) {
				appGr.installed_version = appVerGr.sys_id;
			} else {
				appGr.installed_version = '';
			}
			
			appGr.update();
		}
	}

	function getLatestAppVersion(appSysID) {
		const appVerGr = new GlideRecord('x_376096_mplc_app_version');
		appVerGr.addQuery('app', appSysID);
		appVerGr.addNotNullQuery('target');
		appVerGr.orderByDesc('version');
		appVerGr.setLimit(1);
		appVerGr.query();
		appVerGr.next();
		return appVerGr;
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>markus.kraus</sys_created_by>
        <sys_created_on>2024-08-28 16:52:45</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>71b1cb2993d8de14e02873718bba1072</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>MPLC App Version - Update Set Changes</sys_name>
        <sys_overrides/>
        <sys_package display_value="Marketplace Client" source="x_376096_mplc">2fe28b4497bf39103c2d3f56f053af4e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Marketplace Client">2fe28b4497bf39103c2d3f56f053af4e</sys_scope>
        <sys_update_name>sys_script_71b1cb2993d8de14e02873718bba1072</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2024-08-29 13:49:51</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=71b1cb2993d8de14e02873718bba1072"/>
</record_update>
